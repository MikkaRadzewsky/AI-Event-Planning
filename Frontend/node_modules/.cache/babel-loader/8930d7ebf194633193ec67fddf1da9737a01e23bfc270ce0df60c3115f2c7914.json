{"ast":null,"code":"var _jsxFileName = \"/Users/raniradzewsky/React/Interviews/Senseem/AI-Event-Planning/Frontend/src/Components/HomeArea/SearchBar/SearchBar.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport EventModel from \"../../../Models/EventModel\";\nimport dataService from \"../../../Services/DataService\";\nimport notifyService from \"../../../Services/NotifyService\";\nimport MarvinOutput from \"../MarvinOutput/MarvinOutput\";\nimport \"./SearchBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchBar() {\n  _s();\n  const [neededUrl, setNeededUrl] = useState(\"\");\n  const [currentEvent, setCurrentEvent] = useState();\n  const [outputText, setOutputText] = useState(\"\");\n  const inputElement = document.getElementById(\"InputText\");\n  //   const outputElement = document.getElementById(\"AIOutput\") as HTMLDivElement;\n\n  function hasNullProperty(obj) {\n    for (const key in obj) {\n      if (obj[key] === null) {\n        return true;\n      }\n    }\n    return false;\n  }\n  async function sendToBackend() {\n    //extract input text\n    //send to backend\n\n    //if there is no event yet\n    try {\n      if (!currentEvent) {\n        setNeededUrl(\"translate_prompt\");\n        const updatedEvent = new EventModel(await dataService.sendAndReceiveInitialPrompt(neededUrl, inputElement.value.toString()));\n        console.log(updatedEvent);\n        setCurrentEvent(updatedEvent);\n        console.log(currentEvent);\n\n        //if the event is missing values of the event model\n\n        if (hasNullProperty(currentEvent)) {\n          //update ai chat text...\n          setNeededUrl(\"ask_For_Blanks\");\n          setOutputText(await dataService.askForMissingValues(neededUrl, currentEvent));\n        }\n      }\n      if (hasNullProperty(currentEvent)) {\n        setNeededUrl(\"fill_In_Blanks\");\n        setCurrentEvent(await dataService.sendAndReceiveMissingValues(neededUrl, inputElement.value));\n      }\n      if (currentEvent && !hasNullProperty(currentEvent)) {\n        // recommend places that fit the event values...\n        console.log(\"recommending...\");\n      }\n      console.log(currentEvent);\n    } catch (err) {\n      notifyService.error(err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SearchBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"InputText\",\n      className: \"InputBox\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"SearchButton\",\n      onClick: () => sendToBackend(),\n      children: \"Help Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MarvinOutput, {\n      text: outputText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"EreltlnIUbW+PW/uECG3jc9VN4A=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useState","EventModel","dataService","notifyService","MarvinOutput","SearchBar","neededUrl","setNeededUrl","currentEvent","setCurrentEvent","outputText","setOutputText","inputElement","document","getElementById","hasNullProperty","obj","key","sendToBackend","updatedEvent","sendAndReceiveInitialPrompt","value","toString","console","log","askForMissingValues","sendAndReceiveMissingValues","err","error"],"sources":["/Users/raniradzewsky/React/Interviews/Senseem/AI-Event-Planning/Frontend/src/Components/HomeArea/SearchBar/SearchBar.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport EventModel from \"../../../Models/EventModel\";\nimport dataService from \"../../../Services/DataService\";\nimport notifyService from \"../../../Services/NotifyService\";\nimport MarvinOutput from \"../MarvinOutput/MarvinOutput\";\nimport \"./SearchBar.css\";\n\nfunction SearchBar(): JSX.Element {\n  const [neededUrl, setNeededUrl] = useState<string>(\"\");\n  const [currentEvent, setCurrentEvent] = useState<EventModel>();\n  const [outputText, setOutputText] = useState(\"\");\n  const inputElement = document.getElementById(\"InputText\") as HTMLInputElement;\n  //   const outputElement = document.getElementById(\"AIOutput\") as HTMLDivElement;\n\n  function hasNullProperty(obj: Record<string, any>): boolean {\n    for (const key in obj) {\n      if (obj[key] === null) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  async function sendToBackend() {\n    //extract input text\n    //send to backend\n\n    //if there is no event yet\n    try {\n      if (!currentEvent) {\n        setNeededUrl(\"translate_prompt\");\n\n        const updatedEvent = new EventModel(\n          await dataService.sendAndReceiveInitialPrompt(\n            neededUrl,\n            inputElement.value.toString()\n          )\n        );\n        console.log(updatedEvent);\n\n        setCurrentEvent(updatedEvent);\n        console.log(currentEvent);\n\n        //if the event is missing values of the event model\n\n        if (hasNullProperty(currentEvent)) {\n          //update ai chat text...\n          setNeededUrl(\"ask_For_Blanks\");\n          setOutputText(\n            await dataService.askForMissingValues(neededUrl, currentEvent)\n          );\n        }\n      }\n      if (hasNullProperty(currentEvent)) {\n        setNeededUrl(\"fill_In_Blanks\");\n        setCurrentEvent(\n          await dataService.sendAndReceiveMissingValues(\n            neededUrl,\n            inputElement.value\n          )\n        );\n      }\n\n      if (currentEvent && !hasNullProperty(currentEvent)) {\n        // recommend places that fit the event values...\n        console.log(\"recommending...\");\n      }\n\n      console.log(currentEvent);\n    } catch (err: any) {\n      notifyService.error(err);\n    }\n  }\n\n  return (\n    <div className=\"SearchBar\">\n      {/* search bar and enter: */}\n      <input id=\"InputText\" className=\"InputBox\" type=\"text\"></input>\n      <br />\n      <button className=\"SearchButton\" onClick={() => sendToBackend()}>\n        Help Me\n      </button>\n      <MarvinOutput text={outputText} />\n    </div>\n  );\n}\n\nexport default SearchBar;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,WAAW,MAAM,+BAA+B;AACvD,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAO,iBAAiB;AAAC;AAEzB,SAASC,SAAS,GAAgB;EAAA;EAChC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EACtD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,EAAc;EAC9D,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMY,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAqB;EAC7E;;EAEA,SAASC,eAAe,CAACC,GAAwB,EAAW;IAC1D,KAAK,MAAMC,GAAG,IAAID,GAAG,EAAE;MACrB,IAAIA,GAAG,CAACC,GAAG,CAAC,KAAK,IAAI,EAAE;QACrB,OAAO,IAAI;MACb;IACF;IACA,OAAO,KAAK;EACd;EAEA,eAAeC,aAAa,GAAG;IAC7B;IACA;;IAEA;IACA,IAAI;MACF,IAAI,CAACV,YAAY,EAAE;QACjBD,YAAY,CAAC,kBAAkB,CAAC;QAEhC,MAAMY,YAAY,GAAG,IAAIlB,UAAU,CACjC,MAAMC,WAAW,CAACkB,2BAA2B,CAC3Cd,SAAS,EACTM,YAAY,CAACS,KAAK,CAACC,QAAQ,EAAE,CAC9B,CACF;QACDC,OAAO,CAACC,GAAG,CAACL,YAAY,CAAC;QAEzBV,eAAe,CAACU,YAAY,CAAC;QAC7BI,OAAO,CAACC,GAAG,CAAChB,YAAY,CAAC;;QAEzB;;QAEA,IAAIO,eAAe,CAACP,YAAY,CAAC,EAAE;UACjC;UACAD,YAAY,CAAC,gBAAgB,CAAC;UAC9BI,aAAa,CACX,MAAMT,WAAW,CAACuB,mBAAmB,CAACnB,SAAS,EAAEE,YAAY,CAAC,CAC/D;QACH;MACF;MACA,IAAIO,eAAe,CAACP,YAAY,CAAC,EAAE;QACjCD,YAAY,CAAC,gBAAgB,CAAC;QAC9BE,eAAe,CACb,MAAMP,WAAW,CAACwB,2BAA2B,CAC3CpB,SAAS,EACTM,YAAY,CAACS,KAAK,CACnB,CACF;MACH;MAEA,IAAIb,YAAY,IAAI,CAACO,eAAe,CAACP,YAAY,CAAC,EAAE;QAClD;QACAe,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAChC;MAEAD,OAAO,CAACC,GAAG,CAAChB,YAAY,CAAC;IAC3B,CAAC,CAAC,OAAOmB,GAAQ,EAAE;MACjBxB,aAAa,CAACyB,KAAK,CAACD,GAAG,CAAC;IAC1B;EACF;EAEA,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBAExB;MAAO,EAAE,EAAC,WAAW;MAAC,SAAS,EAAC,UAAU;MAAC,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS,eAC/D;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAQ,SAAS,EAAC,cAAc;MAAC,OAAO,EAAE,MAAMT,aAAa,EAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEvD,eACT,QAAC,YAAY;MAAC,IAAI,EAAER;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9B;AAEV;AAAC,GA9EQL,SAAS;AAAA,KAATA,SAAS;AAgFlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}