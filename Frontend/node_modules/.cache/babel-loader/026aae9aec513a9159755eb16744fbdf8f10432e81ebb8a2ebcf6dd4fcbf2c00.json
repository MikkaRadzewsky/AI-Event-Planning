{"ast":null,"code":"var _jsxFileName = \"/Users/raniradzewsky/React/Interviews/Senseem/AI-Event-Planning/Frontend/src/Components/HomeArea/SearchBar/SearchBar.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport dataService from \"../../../Services/DataService\";\nimport notifyService from \"../../../Services/NotifyService\";\nimport MarvinOutput from \"../MarvinOutput/MarvinOutput\";\nimport \"./SearchBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchBar() {\n  _s();\n  const [currentEvent, setCurrentEvent] = useState();\n  const [outputText, setOutputText] = useState(\"\");\n  const inputElement = document.getElementById(\"InputText\");\n  //   const outputElement = document.getElementById(\"AIOutput\") as HTMLDivElement;\n\n  function hasNullProperty(obj) {\n    for (const value of Object.values(obj)) {\n      if (value === null || value === \"unknown\") {\n        console.log(\"true\");\n        return true;\n      }\n    }\n    console.log(\"false\");\n    return false;\n  }\n  async function sendToBackend() {\n    try {\n      let updatedEvent;\n      if (!currentEvent) {\n        const event = await dataService.sendAndReceiveInitialPrompt(\"translate_prompt\", inputElement.value.toString());\n\n        // let event1: EventModel = event;\n        // console.log(event1);\n\n        updatedEvent = event;\n        console.log(updatedEvent);\n\n        // If the event is missing values of the event model\n        if (hasNullProperty(updatedEvent)) {\n          // Update AI chat text...\n          setOutputText(await dataService.askForMissingValues(\"ask_For_Blanks\", updatedEvent));\n        }\n\n        // Use updatedEvent instead of currentEvent\n        setCurrentEvent(updatedEvent);\n      }\n      if (updatedEvent && hasNullProperty(updatedEvent)) {\n        console.log(\"missing values...\");\n        setNeededUrl(\"fill_In_Blanks\");\n        // Use updatedEvent instead of currentEvent\n        updatedEvent = await dataService.sendAndReceiveMissingValues(neededUrl, inputElement.value);\n        setCurrentEvent(updatedEvent);\n      }\n      if (updatedEvent && !hasNullProperty(updatedEvent)) {\n        // Recommend places that fit the event values...\n        console.log(\"recommending...\");\n      }\n    } catch (err) {\n      notifyService.error(err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SearchBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"InputText\",\n      className: \"InputBox\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"SearchButton\",\n      onClick: () => sendToBackend(),\n      children: \"Help Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MarvinOutput, {\n      text: outputText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"IWxHFOAV6ifznQzfizQgRrCbhIM=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useState","dataService","notifyService","MarvinOutput","SearchBar","currentEvent","setCurrentEvent","outputText","setOutputText","inputElement","document","getElementById","hasNullProperty","obj","value","Object","values","console","log","sendToBackend","updatedEvent","event","sendAndReceiveInitialPrompt","toString","askForMissingValues","setNeededUrl","sendAndReceiveMissingValues","neededUrl","err","error"],"sources":["/Users/raniradzewsky/React/Interviews/Senseem/AI-Event-Planning/Frontend/src/Components/HomeArea/SearchBar/SearchBar.tsx"],"sourcesContent":["import { eventNames } from \"process\";\nimport { useEffect, useState } from \"react\";\nimport EventModel from \"../../../Models/EventModel\";\nimport dataService from \"../../../Services/DataService\";\nimport notifyService from \"../../../Services/NotifyService\";\nimport MarvinOutput from \"../MarvinOutput/MarvinOutput\";\nimport \"./SearchBar.css\";\n\nfunction SearchBar(): JSX.Element {\n  const [currentEvent, setCurrentEvent] = useState<EventModel>();\n  const [outputText, setOutputText] = useState(\"\");\n  const inputElement = document.getElementById(\"InputText\") as HTMLInputElement;\n  //   const outputElement = document.getElementById(\"AIOutput\") as HTMLDivElement;\n\n  function hasNullProperty(obj: EventModel): boolean {\n    for (const value of Object.values(obj)) {\n      if (value === null || value === \"unknown\") {\n        console.log(\"true\");\n        return true;\n      }\n    }\n    console.log(\"false\");\n    return false;\n  }\n\n  async function sendToBackend() {\n    try {\n      let updatedEvent: EventModel;\n\n      if (!currentEvent) {\n        const event: EventModel = await dataService.sendAndReceiveInitialPrompt(\n          \"translate_prompt\",\n          inputElement.value.toString()\n        );\n\n        // let event1: EventModel = event;\n        // console.log(event1);\n\n        updatedEvent = event;\n        console.log(updatedEvent);\n\n        // If the event is missing values of the event model\n        if (hasNullProperty(updatedEvent)) {\n          // Update AI chat text...\n          setOutputText(\n            await dataService.askForMissingValues(\"ask_For_Blanks\", updatedEvent)\n          );\n        }\n\n        // Use updatedEvent instead of currentEvent\n        setCurrentEvent(updatedEvent);\n      }\n\n      if (updatedEvent && hasNullProperty(updatedEvent)) {\n        console.log(\"missing values...\");\n\n        setNeededUrl(\"fill_In_Blanks\");\n        // Use updatedEvent instead of currentEvent\n        updatedEvent = await dataService.sendAndReceiveMissingValues(\n          neededUrl,\n          inputElement.value\n        );\n\n        setCurrentEvent(updatedEvent);\n      }\n\n      if (updatedEvent && !hasNullProperty(updatedEvent)) {\n        // Recommend places that fit the event values...\n        console.log(\"recommending...\");\n      }\n    } catch (err: any) {\n      notifyService.error(err);\n    }\n  }\n\n  return (\n    <div className=\"SearchBar\">\n      {/* search bar and enter: */}\n      <input id=\"InputText\" className=\"InputBox\" type=\"text\"></input>\n      <br />\n      <button className=\"SearchButton\" onClick={() => sendToBackend()}>\n        Help Me\n      </button>\n      <MarvinOutput text={outputText} />\n    </div>\n  );\n}\n\nexport default SearchBar;\n"],"mappings":";;AACA,SAAoBA,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,WAAW,MAAM,+BAA+B;AACvD,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAO,iBAAiB;AAAC;AAEzB,SAASC,SAAS,GAAgB;EAAA;EAChC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,EAAc;EAC9D,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMS,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAqB;EAC7E;;EAEA,SAASC,eAAe,CAACC,GAAe,EAAW;IACjD,KAAK,MAAMC,KAAK,IAAIC,MAAM,CAACC,MAAM,CAACH,GAAG,CAAC,EAAE;MACtC,IAAIC,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,SAAS,EAAE;QACzCG,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;QACnB,OAAO,IAAI;MACb;IACF;IACAD,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,OAAO,KAAK;EACd;EAEA,eAAeC,aAAa,GAAG;IAC7B,IAAI;MACF,IAAIC,YAAwB;MAE5B,IAAI,CAACf,YAAY,EAAE;QACjB,MAAMgB,KAAiB,GAAG,MAAMpB,WAAW,CAACqB,2BAA2B,CACrE,kBAAkB,EAClBb,YAAY,CAACK,KAAK,CAACS,QAAQ,EAAE,CAC9B;;QAED;QACA;;QAEAH,YAAY,GAAGC,KAAK;QACpBJ,OAAO,CAACC,GAAG,CAACE,YAAY,CAAC;;QAEzB;QACA,IAAIR,eAAe,CAACQ,YAAY,CAAC,EAAE;UACjC;UACAZ,aAAa,CACX,MAAMP,WAAW,CAACuB,mBAAmB,CAAC,gBAAgB,EAAEJ,YAAY,CAAC,CACtE;QACH;;QAEA;QACAd,eAAe,CAACc,YAAY,CAAC;MAC/B;MAEA,IAAIA,YAAY,IAAIR,eAAe,CAACQ,YAAY,CAAC,EAAE;QACjDH,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAEhCO,YAAY,CAAC,gBAAgB,CAAC;QAC9B;QACAL,YAAY,GAAG,MAAMnB,WAAW,CAACyB,2BAA2B,CAC1DC,SAAS,EACTlB,YAAY,CAACK,KAAK,CACnB;QAEDR,eAAe,CAACc,YAAY,CAAC;MAC/B;MAEA,IAAIA,YAAY,IAAI,CAACR,eAAe,CAACQ,YAAY,CAAC,EAAE;QAClD;QACAH,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAChC;IACF,CAAC,CAAC,OAAOU,GAAQ,EAAE;MACjB1B,aAAa,CAAC2B,KAAK,CAACD,GAAG,CAAC;IAC1B;EACF;EAEA,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBAExB;MAAO,EAAE,EAAC,WAAW;MAAC,SAAS,EAAC,UAAU;MAAC,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS,eAC/D;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAQ,SAAS,EAAC,cAAc;MAAC,OAAO,EAAE,MAAMT,aAAa,EAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEvD,eACT,QAAC,YAAY;MAAC,IAAI,EAAEZ;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9B;AAEV;AAAC,GA9EQH,SAAS;AAAA,KAATA,SAAS;AAgFlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}